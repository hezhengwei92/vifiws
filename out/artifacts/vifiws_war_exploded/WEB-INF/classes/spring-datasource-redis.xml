<?xml version="1.0" encoding="UTF-8"?>
<!--suppress ALL -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!-- redis连接池 -->
    <bean id="redisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis_max_active}"></property>
        <property name="maxIdle" value="${redis_max_idle}"></property>
        <property name="maxWaitMillis" value="${redis_max_wait}"></property>
        <property name="testOnBorrow" value="${redis_test_on_borrow}"></property>
        <property name="minIdle" value="${redis_min_idle}"/>
        <property name="testOnReturn" value="${redis_test_on_return}"/>
        <property name="testWhileIdle" value="${redis_test_While_idle}"/>
    </bean>
    <!--redis集群-->
    <bean id="redisClusterConfig" class="org.springframework.data.redis.connection.RedisClusterConfiguration">
        <property name="maxRedirects" value="6"/>
        <property name="clusterNodes">
            <set>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis_cluster_addr1}"></constructor-arg>
                    <constructor-arg name="port" value="${redis_cluster_port1}"></constructor-arg>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis_cluster_addr2}"></constructor-arg>
                    <constructor-arg name="port" value="${redis_cluster_port2}"></constructor-arg>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis_cluster_addr3}"></constructor-arg>
                    <constructor-arg name="port" value="${redis_cluster_port3}"></constructor-arg>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis_cluster_addr4}"></constructor-arg>
                    <constructor-arg name="port" value="${redis_cluster_port4}"></constructor-arg>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis_cluster_addr5}"></constructor-arg>
                    <constructor-arg name="port" value="${redis_cluster_port5}"></constructor-arg>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis_cluster_addr6}"></constructor-arg>
                    <constructor-arg name="port" value="${redis_cluster_port6}"></constructor-arg>
                </bean>
            </set>
        </property>
    </bean>
    <!-- ReDis连接工厂-->
    <bean id="redis4CacheConnectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" destroy-method="destroy">
        <constructor-arg name="clusterConfig" ref="redisClusterConfig"/>
        <property name="timeout" value="${redis_timeout}"/>
        <property name="poolConfig" ref="redisPoolConfig"/>
    </bean>
    <!--存储序列化-->
    <bean name="stringRedisSerializer"
          class="org.springframework.data.redis.serializer.StringRedisSerializer"/>

    <!--集群Resis使用模板-->
    <bean id="clusterRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate" >
        <property name="connectionFactory" ref="redis4CacheConnectionFactory"/>
        <property name="keySerializer" ref="stringRedisSerializer"/>
        <property name="hashKeySerializer" ref="stringRedisSerializer"/>
        <property name="valueSerializer" ref="stringRedisSerializer"/>
        <property name="hashValueSerializer" ref="stringRedisSerializer"/>
    </bean>

    <!-- redis连接工厂 -->
    <!--<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis_addr}"></property>
        <property name="port" value="${redis_port}"></property>
        <property name="password" value="${redis_auth}"></property>
        <property name="poolConfig" ref="jedisConfig"></property>
    </bean>-->
    <!--<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg index="0" ref="jedisConfig"/>
        <constructor-arg index="1" value="${redis_addr}"/>
        <constructor-arg index="2" value="${redis_port}" type="int"/>
        &lt;!&ndash;<constructor-arg index="3" value="${redis_auth}"/>&ndash;&gt;
        <constructor-arg index="3" value="60000" type="int"/>
    </bean>-->
    <!--<bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy" depends-on="poolConfig">
        <constructor-arg name="poolConfig" ref="poolConfig"/> &lt;!&ndash; 加载jedisPool配置信息 &ndash;&gt;
        <constructor-arg name="host" value="${redis_addr}"/>&lt;!&ndash; redis主机地址 &ndash;&gt;
        <constructor-arg name="port" value="${redis_port}"/> &lt;!&ndash; redis连接端口 &ndash;&gt;
        <constructor-arg name="password" value="${redis_auth}"/> &lt;!&ndash;密码&ndash;&gt;
        &lt;!&ndash;<constructor-arg name="database" value="${redis.database}"/> 数据库 &ndash;&gt;
        <constructor-arg name="timeout" value="${redis_timeout}"/> &lt;!&ndash;连接超时&ndash;&gt;
    </bean>-->
    <!-- redis操作模板，这里采用尽量面向对象的模板 -->
    <!--<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="connectionFactory" />
        &lt;!&ndash;     如果不配置Serializer，那么存储的时候只能使用String，如果用对象类型存储，那么会提示错误 can't cast to String！！！&ndash;&gt;
        &lt;!&ndash;<property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>&ndash;&gt;
    </bean>-->


    <!--<bean id="redisUtil" class="net.eoutech.utils.RedisUtil" >
        <constructor-arg name="redisTemplate" ref="redisTemplate"/>
    </bean>-->

    <!--<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        &lt;!&ndash;<property name="maxIdle" value="${redis.maxIdle}"/>&ndash;&gt;
        <property name="maxActive" value="${redis.maxActive}"/>
        <property name="maxWait" value="${redis.maxWait}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    </bean>

    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:hostName="${redis.host}"
          p:port="${redis.port}"
          p:password="${redis.pass}"
          p:poolConfig-ref="poolConfig"/>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
    </bean>-->
</beans>
